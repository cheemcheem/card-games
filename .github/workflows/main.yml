# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

defaults:
  run:
    shell: bash

jobs:
  build:
    name: Test, Build, Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Start NPM Cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{runner.os}}-npm-${{hashFiles('**/package-lock.json')}}
          restore-keys: |
            ${{runner.os}}-npm-${{hashFiles('**/package-lock.json')}}
            ${{runner.os}}-npm-

      - name: Start Maven Cache
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{runner.os}}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{runner.os}}-m2-${{ hashFiles('**/pom.xml') }}
            ${{runner.os}}-m2-

      - name: Set up JDK 13
        uses: actions/setup-java@v1
        with:
          java-version: 13

      - name: Compile with Maven
        run: ./mvnw -B clean compile --file pom.xml

      - name: Test with Maven
        run: ./mvnw -B test --file pom.xml

      - name: Build with Maven
        run: ./mvnw -B package -DskipTests --file pom.xml

      - name: Prepare SSH Key and Artefact
        if: ${{github.ref == 'refs/heads/develop'}}
        run: 'echo "$SSH_KEY" > key && /bin/chmod 700 key && /bin/chmod 700 target && /bin/chmod 700 target/card-games.jar'
        shell: bash
        env:
          SSH_KEY: ${{secrets.KEY}}

      - name: Upload Project to Dev Server
        if: ${{github.ref == 'refs/heads/develop'}}
        run: /usr/bin/scp -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i key target/card-games.jar ${{secrets.USERNAME}}@${{secrets.HOST}}:${{secrets.PATH}}

      - name: Deploy Project on Dev Server
        if: ${{github.ref == 'refs/heads/develop'}}
        run: /usr/bin/ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i key ${{secrets.USERNAME}}@${{secrets.HOST}} ${{secrets.RESTART_SERVICE}}

      - name: Alert IFTTT
        if: ${{github.ref == 'refs/heads/develop'}}
        uses: distributhor/workflow-webhook@v1
        env:
          webhook_url: ${{secrets.IFTTT_URL}}
          webhook_secret: ${{secrets.IFTTT_SECRET}}